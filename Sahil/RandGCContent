from Bio.SeqUtils import GC
from Bio.Seq import Seq
import random
sim = 8#25, 30, ..., 60
onepercenttimes = 10000
dnalen = 300
percents = [25 + 5*_ for _ in range(0, 8) ]
for _ in range (0, sim):#simulations (changes in GC content)
    cumulative = 0 #helps keep avg of avg max protein len over the onepercenttimes simulations
    gccumulative = 0 #helps keep avg of avg gc content over the onepercenttimes simulations
    for _2 in range(0, onepercenttimes):#simulate one percentage onepercenttimes times
        dna = ""
        for _3 in range(0, dnalen):
            num = random.uniform(0, 1)
            num2= random.uniform(0,1)
            bound = percents[_] / 100
            if num < bound : #if _ = 4, then bound = .40
                if num2 < .5:
                    dna += "G"
                else:
                    dna += "C"
            else:
                if num2 < .5:
                    dna += "A"
                else:
                    dna += "T"
        read = Seq(dna)
        for _4 in range(0,3):
            tempmax = 0
            List = read[_4:].translate().split("*")
            for _5 in List:
                if len(_5) > tempmax:
                    tempmax = len(_5)
            gccumulative += GC(read)
            cumulative+= tempmax
    print("Trial Number:", "{:4d}".format(_+1), " GC%: ", "{:5.1f}".format(gccumulative/(3*onepercenttimes)), " AMPL ", "{:6.1f}".format(cumulative/(3*onepercenttimes))) #AMPL = Average Max Protein Length
